import java.util.*;

class Volunteer {
    private int id;
    private String name;
    private List<Integer> ratings;

    public Volunteer(int id, String name) {
        this.id = id;
        this.name = name;
        this.ratings = new ArrayList<>();
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public void addRating(int rating) {
        if (rating < 1 || rating > 5) {
            throw new IllegalArgumentException("Rating must be between 1 and 5.");
        }
        ratings.add(rating);
    }

    public double getAverageRating() {
        if (ratings.isEmpty()) {
            return 0.0;
        }
        int sum = ratings.stream().mapToInt(Integer::intValue).sum();
        return (double) sum / ratings.size();
    }

    @Override
    public String toString() {
        return "Volunteer{id=" + id + ", name='" + name + '\'' + ", averageRating=" + getAverageRating() + '}';
    }
}

class VolunteeringPlatform {
    private Map<Integer, Volunteer> volunteers;

    public VolunteeringPlatform() {
        this.volunteers = new HashMap<>();
    }

    public void addVolunteer(int id, String name) {
        if (volunteers.containsKey(id)) {
            throw new IllegalArgumentException("Volunteer with this ID already exists.");
        }
        volunteers.put(id, new Volunteer(id, name));
    }

    public void rateVolunteer(int id, int rating) {
        Volunteer volunteer = volunteers.get(id);
        if (volunteer == null) {
            throw new IllegalArgumentException("Volunteer with this ID does not exist.");
        }
        volunteer.addRating(rating);
    }

    public List<Volunteer> getVolunteers() {
        return new ArrayList<>(volunteers.values());
    }

    public void displayVolunteers() {
        volunteers.values().forEach(System.out::println);
    }
}

public class Main {
    public static void main(String[] args) {
        VolunteeringPlatform platform = new VolunteeringPlatform();

        // Adding volunteers
        platform.addVolunteer(1, "Alice");
        platform.addVolunteer(2, "Bob");
        platform.addVolunteer(3, "Charlie");

        // Rating volunteers
        platform.rateVolunteer(1, 5);
        platform.rateVolunteer(1, 4);
        platform.rateVolunteer(2, 3);
        platform.rateVolunteer(3, 4);
        platform.rateVolunteer(3, 5);

        // Display volunteers with ratings
        platform.displayVolunteers();
    }
}
